using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Diagnostics;

namespace SimulationAddIn
{
    class ModelManagement
    {

        public void RunWithAnimation(bool syncMode)
        {
            string modelPath = ConfigRep.ReadModelPathFromSheet();
            string modelName = ConfigRep.ReadAutoModFileFromSheet();
            string fullPath = modelPath + "\\" + modelName + ".exe";

            MessageBox.Show(modelPath + "\\" + modelName + ".exe");

            Process p = new Process();

            p.StartInfo.FileName = fullPath;
            p.EnableRaisingEvents = true;
            p.Exited += new EventHandler(RunHasExited);
            p.Start();
        }

        private void RunHasExited(object sender, System.EventArgs e)
        {
            MessageBox.Show("Simulation has exited");
        }

        public void CreateAMOFile()
        {
            using (System.IO.StreamWriter file =
            new System.IO.StreamWriter(@"C:\Users\papat\Documents\models\TestShuttle2\TestShuttle2.arc\model.amo"))
            {
                file.WriteLine("VERSION 12.6.1.20");
                file.WriteLine("UNITS Feet Seconds");
                file.WriteLine("RNSET 1");
                file.WriteLine("DRAWPOS minx -29.35 maxx -27.5 miny 0.399999820579068 maxy 3.6 minz -0.100000140973589 maxz 0.40000015378937 trx 0 try 0");
                file.WriteLine("PROCSYS name testshuttle1~");
                file.WriteLine("\tSYSPOS endx 1");
                file.WriteLine("CONTROL snaplen 8 Hours counts 1 autorep");
            }
        }

        public void CreateASYFile()
        {
            using (System.IO.StreamWriter file =
            new System.IO.StreamWriter(@"C:\Users\papat\Documents\models\TestShuttle2\TestShuttle2.arc\testshuttle1~.asy"))
            {
                file.WriteLine("VERSION 12.6.1.20");
                file.WriteLine("SYSTYPE Process");
                file.WriteLine("UNITS Feet Seconds");
                file.WriteLine("SYSDEF UtilByAvail off RefCheck on debugger on warningMessages on report standard");
                file.WriteLine("FLAGS");
                file.WriteLine("    System Inherit");
                file.WriteLine("    Text Invisible Inherit");
                file.WriteLine("    Resources Inherit");
                file.WriteLine("    Resource Names Inherit");
                file.WriteLine("    Queues Inherit");
                file.WriteLine("    Queue Names Inherit");
                file.WriteLine("    Queue Amounts Inherit");
                file.WriteLine("    Blocks Inherit");
                file.WriteLine("    Block Names Inherit");
                file.WriteLine("    Labels Inherit");
                file.WriteLine("PROCDEF");
                file.WriteLine("PROC name PShuttleStart 0 traf Infinite");
                file.WriteLine("PROC name PInit 0 traf Infinite");
                file.WriteLine("PROC name PMoveIntoStorage 0 traf Infinite");
                file.WriteLine("PROC name PShuttleStage 0 traf Infinite");
                file.WriteLine("PROC name PMoveOutOfStorage 0 traf Infinite");
                file.WriteLine("LDTYPE name Shuttle 0 dis");
                file.WriteLine("picpos begx -28 begy 3 endx -27 endy 3");
                file.WriteLine(" template Feet");
                file.WriteLine("700 17");
                file.WriteLine("2 2 0 1 1 FullShuttlev2_cel");
                file.WriteLine("1");
                file.WriteLine("700 21");
                file.WriteLine("2 2 0 1 1 shuttlev1_cel");
                file.WriteLine("");
                file.WriteLine("    0.00    0.00    0.00");
                file.WriteLine("0 0 0 90");
                file.WriteLine("");
                file.WriteLine("    1.00    1.00    1.00");
                file.WriteLine("2");
                file.WriteLine("700 1");
                file.WriteLine("8 8 0 1 1 Elem050AD388");
                file.WriteLine("7");
                file.WriteLine("310 21");
                file.WriteLine("8 8 0 1 1 Elem050AD2E0");
                file.WriteLine("0  0 -0.100000001490116");
                file.WriteLine("0   0.00    0.00    0.00");
                file.WriteLine("    1.00    1.00    1.00");
                file.WriteLine("0.899999976158142 1 0.899999976158142 1 0.100000001490116 0 0");
                file.WriteLine("351 5");
                file.WriteLine("9 9 0 1 1 Elem050AD4D8");
                file.WriteLine("0.5  0.5  0.200000002980232");
                file.WriteLine("0 90 0 0");
                file.WriteLine("");
                file.WriteLine("    1.00    1.00    1.00");
                file.WriteLine("0.100000001490116 1 0 0");
                file.WriteLine("351 5");
                file.WriteLine("9 9 0 1 1 Elem050AD4D8");
                file.WriteLine("-0.5  0.5  0.200000002980232");
                file.WriteLine("0 90 0 0");
                file.WriteLine("");
                file.WriteLine("    1.00    1.00    1.00");
                file.WriteLine("0.100000001490116 1 0 0");
                file.WriteLine("351 5");
                file.WriteLine("9 9 0 1 1 Elem050AD4D8");
                file.WriteLine("0.5  0.5  0");
                file.WriteLine("0 90 0 0");
                file.WriteLine("");
                file.WriteLine("    1.00    1.00    1.00");
                file.WriteLine("0.100000001490116 1 0 0");
                file.WriteLine("351 5");
                file.WriteLine("9 9 0 1 1 Elem050AD4D8");
                file.WriteLine("-0.5  0.5  0");
                file.WriteLine("0 90 0 0");
                file.WriteLine("");
                file.WriteLine("    1.00    1.00    1.00");
                file.WriteLine("0.100000001490116 1 0 0");
                file.WriteLine("310 5");
                file.WriteLine("9 9 0 1 1 Elem050C0818");
                file.WriteLine("0.5  0  0");
                file.WriteLine("0   0.00    0.00    0.00");
                file.WriteLine("");
                file.WriteLine("    1.00    1.00    1.00");
                file.WriteLine("1 0.200000002980232 1 0.200000002980232 0.200000002980232 0 0");
                file.WriteLine("310 5");
                file.WriteLine("9 9 0 1 1 Elem050C0818");
                file.WriteLine("-0.5  0  0");
                file.WriteLine("0   0.00    0.00    0.00");
                file.WriteLine("");
                file.WriteLine("    1.00    1.00    1.00");
                file.WriteLine("1 0.200000002980232 1 0.200000002980232 0.200000002980232 0 0");
                file.WriteLine("700 19");
                file.WriteLine("2 2 0 1 1 Extender1");
                file.WriteLine("2");
                file.WriteLine("10 0 0.75 0 0");
                file.WriteLine("0  0  0");
                file.WriteLine("0 90 0 0");
                file.WriteLine("1  1  1");
                file.WriteLine("0");
                file.WriteLine("3");
                file.WriteLine("310 5");
                file.WriteLine("9 9 0 1 1 Elem050C0818");
                file.WriteLine("0.5  0  0");
                file.WriteLine("0   0.00    0.00    0.00");
                file.WriteLine("");
                file.WriteLine("    1.00    1.00    1.00");
                file.WriteLine("1 0.200000002980232 1 0.200000002980232 0.200000002980232 0 0");
                file.WriteLine("310 5");
                file.WriteLine("9 9 0 1 1 Elem050C0818");
                file.WriteLine("-0.5  0  0");
                file.WriteLine("0   0.00    0.00    0.00");
                file.WriteLine("");
                file.WriteLine("    1.00    1.00    1.00");
                file.WriteLine("1 0.200000002980232 1 0.200000002980232 0.200000002980232 0 0");
                file.WriteLine("700 19");
                file.WriteLine("2 2 0 1 1 Extender2");
                file.WriteLine("2");
                file.WriteLine("10 0 0.75 0 0");
                file.WriteLine("0  0  0");
                file.WriteLine("0 90 0 0");
                file.WriteLine("1  1  1");
                file.WriteLine("0");
                file.WriteLine("2");
                file.WriteLine("310 5");
                file.WriteLine("9 9 0 1 1 Elem050C0818");
                file.WriteLine("0.5  0  0");
                file.WriteLine("0   0.00    0.00    0.00");
                file.WriteLine("");
                file.WriteLine("    1.00    1.00    1.00");
                file.WriteLine("1 0.200000002980232 1 0.200000002980232 0.200000002980232 0 0");
                file.WriteLine("310 5");
                file.WriteLine("9 9 0 1 1 Elem050C0818");
                file.WriteLine("-0.5  0  0");
                file.WriteLine("0   0.00    0.00    0.00");
                file.WriteLine("");
                file.WriteLine("    1.00    1.00    1.00");
                file.WriteLine("1 0.200000002980232 1 0.200000002980232 0.200000002980232 0 0");
                file.WriteLine("end");
                file.WriteLine("");
                file.WriteLine("        create con 0 Seconds stream stream_Shuttle_1 First PInit 0 Limit 1");
                file.WriteLine("LDTYPE name LFullShuttle 0 dis");
                file.WriteLine("picpos begx -28 begy 1 endx -27 endy 1");
                file.WriteLine(" template Feet");
                file.WriteLine("700 17");
                file.WriteLine("2 2 0 1 1 FullShuttlev2_cel");
                file.WriteLine("1");
                file.WriteLine("700 21");
                file.WriteLine("2 2 0 1 1 shuttlev1_cel");
                file.WriteLine("");
                file.WriteLine("    0.00    0.00    0.00");
                file.WriteLine("0 0 0 90");
                file.WriteLine("");
                file.WriteLine("    1.00    1.00    1.00");
                file.WriteLine("2");
                file.WriteLine("700 1");
                file.WriteLine("8 8 0 1 1 Elem050AD388");
                file.WriteLine("7");
                file.WriteLine("310 21");
                file.WriteLine("8 8 0 1 1 Elem050AD2E0");
                file.WriteLine("0  0 -0.100000001490116");
                file.WriteLine("0   0.00    0.00    0.00");
                file.WriteLine("");
                file.WriteLine("    1.00    1.00    1.00");
                file.WriteLine("0.899999976158142 1 0.899999976158142 1 0.100000001490116 0 0");
                file.WriteLine("351 5");
                file.WriteLine("9 9 0 1 1 Elem050AD4D8");
                file.WriteLine("0.5  0.5  0.200000002980232");
                file.WriteLine("0 90 0 0");
                file.WriteLine("");
                file.WriteLine("    1.00    1.00    1.00");
                file.WriteLine("0.100000001490116 1 0 0");
                file.WriteLine("351 5");
                file.WriteLine("9 9 0 1 1 Elem050AD4D8");
                file.WriteLine("-0.5  0.5  0.200000002980232");
                file.WriteLine("0 90 0 0");
                file.WriteLine("");
                file.WriteLine("    1.00    1.00    1.00");
                file.WriteLine("0.100000001490116 1 0 0");
                file.WriteLine("351 5");
                file.WriteLine("9 9 0 1 1 Elem050AD4D8");
                file.WriteLine("0.5  0.5  0");
                file.WriteLine("0 90 0 0");
                file.WriteLine("");
                file.WriteLine("    1.00    1.00    1.00");
                file.WriteLine("0.100000001490116 1 0 0");
                file.WriteLine("351 5");
                file.WriteLine("");
                file.WriteLine("9 9 0 1 1 Elem050AD4D8");
                file.WriteLine("-0.5  0.5  0");
                file.WriteLine("0 90 0 0");
                file.WriteLine("");
                file.WriteLine("    1.00    1.00    1.00");
                file.WriteLine("0.100000001490116 1 0 0");
                file.WriteLine("310 5");
                file.WriteLine("9 9 0 1 1 Elem050C0818");
                file.WriteLine("0.5  0  0");
                file.WriteLine("0   0.00    0.00    0.00");
                file.WriteLine("");
                file.WriteLine("    1.00    1.00    1.00");
                file.WriteLine("1 0.200000002980232 1 0.200000002980232 0.200000002980232 0 0");
                file.WriteLine("310 5");
                file.WriteLine("9 9 0 1 1 Elem050C0818");
                file.WriteLine("-0.5  0  0");
                file.WriteLine("0   0.00    0.00    0.00");
                file.WriteLine("");
                file.WriteLine("    1.00    1.00    1.00");
                file.WriteLine("1 0.200000002980232 1 0.200000002980232 0.200000002980232 0 0");
                file.WriteLine("700 19");
                file.WriteLine("2 2 0 1 1 Extender1");
                file.WriteLine("2");
                file.WriteLine("10 0 0.75 0 0");
                file.WriteLine("0  0  0");
                file.WriteLine("0 90 0 0");
                file.WriteLine("1  1  1");
                file.WriteLine("0");
                file.WriteLine("3");
                file.WriteLine("310 5");
                file.WriteLine("9 9 0 1 1 Elem050C0818");
                file.WriteLine("0.5  0  0");
                file.WriteLine("0   0.00    0.00    0.00");
                file.WriteLine("");
                file.WriteLine("    1.00    1.00    1.00");
                file.WriteLine("1 0.200000002980232 1 0.200000002980232 0.200000002980232 0 0");
                file.WriteLine("310 5");
                file.WriteLine("9 9 0 1 1 Elem050C0818");
                file.WriteLine("-0.5  0  0");
                file.WriteLine("0   0.00    0.00    0.00");
                file.WriteLine("");
                file.WriteLine("    1.00    1.00    1.00");
                file.WriteLine("1 0.200000002980232 1 0.200000002980232 0.200000002980232 0 0");
                file.WriteLine("700 19");
                file.WriteLine("2 2 0 1 1 Extender2");
                file.WriteLine("2");
                file.WriteLine("10 0 0.75 0 0");
                file.WriteLine("0  0  0");
                file.WriteLine("0 90 0 0");
                file.WriteLine("1  1  1");
                file.WriteLine("0");
                file.WriteLine("3");
                file.WriteLine("310 5");
                file.WriteLine("9 9 0 1 1 Elem050C0818");
                file.WriteLine("0.5  0  0");
                file.WriteLine("0   0.00    0.00    0.00");
                file.WriteLine("");
                file.WriteLine("    1.00    1.00    1.00");
                file.WriteLine("1 0.200000002980232 1 0.200000002980232 0.200000002980232 0 0");
                file.WriteLine("310 5");
                file.WriteLine("9 9 0 1 1 Elem050C0818");
                file.WriteLine("-0.5  0  0");
                file.WriteLine("0   0.00    0.00    0.00");
                file.WriteLine("");
                file.WriteLine("    1.00    1.00    1.00");
                file.WriteLine("1 0.200000002980232 1 0.200000002980232 0.200000002980232 0 0");
                file.WriteLine("310 1");
                file.WriteLine("69 69 0 1 1 Load");
                file.WriteLine("0.699999988079071 0.75 0.699999988079071 0.75 0.400000005960464 0 0");
                file.WriteLine("end");
                file.WriteLine("LDTYPE name LBox 0 dis");
                file.WriteLine("picpos begx -29 begy 1 endx -28 endy 1 scx 0.699999988079071 scy 0.699999988079071 scz 0.400000005960464");
                file.WriteLine(" color 57 template Feet");
                file.WriteLine("700 17");
                file.WriteLine("57 57 0 1 1 None");
                file.WriteLine("1");
                file.WriteLine("310 0");
                file.WriteLine("1 1 1 1 1 0 0");
                file.WriteLine("end");
                file.WriteLine("QUEUE name QShuttleHome 0 cap 2147483647");
                file.WriteLine("");
                file.WriteLine("    dis 0 Stacking OTT_LDDISP");
                file.WriteLine("        picpos begx -28 begy 2 endx -27 endy 2 scx 0.00999999977648258 scy 0.00999999977648258 scz 0.00999999977648258");
                file.WriteLine("");
                file.WriteLine("    UserDef template Feet");
                file.WriteLine("700 17");
                file.WriteLine("2 2 0 1 1 none");
                file.WriteLine("1");
                file.WriteLine("310 17");
                file.WriteLine("2 2 0 1 0 none");
                file.WriteLine("4 4 4 4 4 0 0");
                file.WriteLine("end");
                file.WriteLine("");
                file.WriteLine("QUEUE name QInvis 0 cap 2147483647");
                file.WriteLine("");
                file.WriteLine("");
                file.WriteLine("    UserDef");
                file.WriteLine("");
                file.WriteLine("ORDER name OLWaitForShuttle 0");
                file.WriteLine("ORDER name OLOnShuttle 0");
                file.WriteLine("ORDER name OLShuttleUnloading 0");
                file.WriteLine("ORDER name OLIdleShuttle 0");
                file.WriteLine("ORDER name OLNeedsShuttle 0");
                file.WriteLine("ORDER name OLUnloading 0");
                file.WriteLine("COUNT name CMoving 0 cap Infinite");
                file.WriteLine("COUNT name CIdle 0 cap Infinite");
                file.WriteLine("COUNT name CLoading 0 cap Infinite");
                file.WriteLine("COUNT name CUnloading 0 cap Infinite");
                file.WriteLine("ATT name AAisle 0 type Integer");
                file.WriteLine("ATT name AShelf 0 type Integer");
                file.WriteLine("ATT name ASide 0 type Integer");
                file.WriteLine("ATT name ACurrentBay 0 type Integer");
                file.WriteLine("ATT name ALoadPtr 0 type LoadPtr");
                file.WriteLine("ATT name AStorageBay 0 type Integer");
                file.WriteLine("VAR name VNumBays 0 type Integer");
                file.WriteLine("VAR name VBayWidth 0 type Integer");
                file.WriteLine("VAR name VNumAisles 0 type Integer");
                file.WriteLine("VAR name VAisleToAisle 0 type Integer");
                file.WriteLine("VAR name VNumShelves 0 type Integer");
                file.WriteLine("VAR name VShelfHeight 0 type Integer");
                file.WriteLine("VAR name Vi 0 type Integer");
                file.WriteLine("VAR name Vj 0 type Integer");
                file.WriteLine("VAR name VShuttleOrientation 0 type Integer");
                file.WriteLine("VAR name VLoadPtr 0 type LoadPtr");
                file.WriteLine("VAR name VShelfTemp 0 type Integer");
                file.WriteLine("VAR name VAisleTemp 0 type Integer");
                file.WriteLine("VAR name VCount 1 5 type Integer");
                file.WriteLine("VAR name VShuttleSpeed 0 type Real");
                file.WriteLine("VAR name Vtemp_r 0 type Real");
                file.WriteLine("VAR name VShuttleLoadTime 0 type Real");
                file.WriteLine("VAR name VShuttleUnloadTime 0 type Real");
                file.WriteLine("VAR name VLowestShelfHeight 0 type Real");
                file.WriteLine("VAR name VLEFT 0 type Integer");
                file.WriteLine("VAR name VRIGHT 0 type Integer");
                file.WriteLine("VAR name VCENTER 0 type Integer");
                file.WriteLine("VAR name VShuttleLoad 0 type Integer");
                file.WriteLine("VAR name VNumShuttles 0 type Integer");
                file.WriteLine("RNSTREAM stream0 0 type CMRG flags 1");
                file.WriteLine("");
                file.WriteLine("    cmrgseed 1 12345 12345 12345 12345 12345 12345");
                file.WriteLine("RNSTREAM stream_Shuttle_1 0 type CMRG flags 1");
                file.WriteLine("");
                file.WriteLine("    title \"Generated automatically for Shuttle\"");
                file.WriteLine("");
                file.WriteLine("    cmrgseed 1 3692455944 1366884236 2968912127 335948734 4161675175 475798818");
                file.WriteLine("");
                file.WriteLine("RNSTATE 1015873554 1310354410 2249465273 994084013 2912484720 3876682925");
                file.WriteLine("FUNC name FDefinitions type Integer");
                file.WriteLine("FUNC name FGetLoadNeedingShuttle type LoadPtr PARAM name ArgShelf type Integer PARAM name ArgAisle type Integer");
                file.WriteLine("FUNC name abs type Real PARAM name Arg1 type Real");
                file.WriteLine("SUBRTN name SRackDefine");
                file.WriteLine("SUBRTN name SShuttleDefine");
                file.WriteLine("SUBRTN name SLiftDefine");
                file.WriteLine("SFileBegin  name init.m");
                file.WriteLine("/* This function defines all of the static constants to be used in the model */");
                file.WriteLine("begin FDefinitions function");
                file.WriteLine("    /*");
                file.WriteLine("");
                file.WriteLine("    set YPOS = 1");
                file.WriteLine("    set YNEG = 2");
                file.WriteLine("    set XPOS = 3");
                file.WriteLine("    set XNEG = 4");
                file.WriteLine("    */");
                file.WriteLine("    /* load and unload position on shuttle */");
                file.WriteLine("    set VLEFT = 1");
                file.WriteLine("    set VRIGHT = 2");
                file.WriteLine("    set VCENTER = 0");
                file.WriteLine("    return true");
                file.WriteLine("end");
                file.WriteLine("");
                file.WriteLine("begin SRackDefine");
                file.WriteLine("    set VNumBays = 5");
                file.WriteLine("    set VBayWidth = 2.5	/* Feet */");
                file.WriteLine("    set VNumAisles = 2");
                file.WriteLine("    set VAisleToAisle = 3 /* Feet */");
                file.WriteLine("    set VNumShelves = 3");
                file.WriteLine("    set VShelfHeight = 2.5	/* Feet */");
                file.WriteLine("    set VLowestShelfHeight = 1.0	/* Feet */");
                file.WriteLine("    set VNumShuttles = VNumAisles * VNumShelves");
                file.WriteLine("end");
                file.WriteLine("");
                file.WriteLine("begin SShuttleDefine");
                file.WriteLine("    set VShuttleOrientation = 1	/* replace with YPOS when using full version */");
                file.WriteLine("    set VShuttleSpeed = 3.0	/* Feet per second */");
                file.WriteLine("    set VShuttleLoadTime = 7.3	/* Time to load a shuttle */");
                file.WriteLine("    set VShuttleUnloadTime = 4.5	/* Time to unload a shuttle */");
                file.WriteLine("    set Vi = 0");
                file.WriteLine("    while Vi < VNumAisles do begin");
                file.WriteLine("        inc Vi by 1");
                file.WriteLine("        set Vj = 0");
                file.WriteLine("        while Vj < VNumShelves do begin");
                file.WriteLine("           inc Vj by 1");
                file.WriteLine("            set AAisle = Vi");
                file.WriteLine("            set AShelf = Vj");
                file.WriteLine("            clone 1 load to PShuttleStart");
                file.WriteLine("       end");
                file.WriteLine("    end");
                file.WriteLine("end");
                file.WriteLine("");
                file.WriteLine("begin SLiftDefine");
                file.WriteLine("    set VShuttleLoad = VLEFT");
                file.WriteLine("end");
                file.WriteLine("");
                file.WriteLine("begin PInit arriving");
                file.WriteLine("    call FDefinitions()");
                file.WriteLine("    call SRackDefine");
                file.WriteLine("    call SShuttleDefine");
                file.WriteLine("    call SLiftDefine");
                file.WriteLine("");
                file.WriteLine("    wait for 30 sec");
                file.WriteLine("    clone 2 load to PShuttleStage new load type LBox");
                file.WriteLine("    wait for 30 sec");
                file.WriteLine("    clone 2 load to PShuttleStage new load type LBox");
                file.WriteLine("    wait for 30 sec");
                file.WriteLine("    clone 2 load to PShuttleStage new load type LBox");
                file.WriteLine("    wait for 30 sec");
                file.WriteLine("    clone 2 load to PShuttleStage new load type LBox");
                file.WriteLine("end");
                file.WriteLine("#@!");
                file.WriteLine("SFileBegin  name Shuttle.m");
                file.WriteLine("begin PShuttleStart arriving");
                file.WriteLine("    move into QShuttleHome");
                file.WriteLine("    translate to z VLowestShelfHeight + (AShelf -1) * VShelfHeight, x VAisleToAisle * (AAisle -1)");
                file.WriteLine("    set ACurrentBay = 0");
                file.WriteLine("    while 1 = 1 do begin");
                file.WriteLine("          /* Find the next load */");
                file.WriteLine("          set ALoadPtr = FGetLoadNeedingShuttle(AShelf, AAisle)");
                file.WriteLine("        while ALoadPtr = null do begin");
                file.WriteLine("            inc CIdle by 1");
                file.WriteLine("            wait to be ordered on OLIdleShuttle");
                file.WriteLine("            dec CIdle by 1");
                file.WriteLine("            set ALoadPtr = FGetLoadNeedingShuttle(AShelf, AAisle)");
                file.WriteLine("        end");
                file.WriteLine("        order ALoadPtr from OLNeedsShuttle to OLWaitForShuttle");
                file.WriteLine("            in case order not filled print \"Load was selected, but unable to order from orderlist\" to message");
                file.WriteLine("        /* move to pick up the load */");
                file.WriteLine("        set Vtemp_r = (ALoadPtr ACurrentBay - ACurrentBay) *VBayWidth");
                file.WriteLine("        inc CMoving by 1	/* used to track move time */");
                file.WriteLine("        print this \"Starting move\" to message");
                file.WriteLine("        translate to y(ALoadPtr ACurrentBay * VBayWidth) x VAisleToAisle *(AAisle - 1) in abs(Vtemp_r) sec");
                file.WriteLine("     dec CMoving by 1");
                file.WriteLine("        print this \"Stopping move\" to message");
                file.WriteLine("        set ACurrentBay = ALoadPtr ACurrentBay");
                file.WriteLine("        /* Load onto the shuttle */");
                file.WriteLine("        inc CLoading by 1");
                file.WriteLine("        wait for VShuttleLoadTime / 2 sec");
                file.WriteLine("        translate ALoadPtr to y(ALoadPtr ACurrentBay * VBayWidth) x VAisleToAisle * (AAisle - 1) in VShuttleLoadTime / 2 sec");
                file.WriteLine("        order ALoadPtr from OLWaitForShuttle to continue");
                file.WriteLine("            in case order not filled print \"Load was selected, but unable to order from OLWaitForShuttle\" to message");
                file.WriteLine("        set load type = LFullShuttle");
                file.WriteLine("        dec CLoading by 1");
                file.WriteLine("        /* Deliver the load */");
                file.WriteLine("       set Vtemp_r = (ALoadPtr AStorageBay - ACurrentBay) *VBayWidth");
                file.WriteLine("        inc CMoving by 1	/* used to track move time */");
                file.WriteLine("        print this \"Starting move\" to message");
                file.WriteLine("        translate to y(ALoadPtr AStorageBay * VBayWidth) in abs(Vtemp_r) sec");
                file.WriteLine("       print this \"Stopping move\" to message");
                file.WriteLine("        dec CMoving by 1	/* used to track move time */");
                file.WriteLine("        set ACurrentBay = ALoadPtr AStorageBay");
                file.WriteLine("        /* unload the shuttle */");
                file.WriteLine("        inc CUnloading by 1");
                file.WriteLine("        order ALoadPtr from OLOnShuttle to continue");
                file.WriteLine("        /* need to translate the load to the same position as the vehicle, so it can then be translated onto the shelf */");
                file.WriteLine("        set load type = Shuttle");
                file.WriteLine("        if (ALoadPtr ASide = VLEFT) then");
                file.WriteLine("           translate ALoadPtr to y(ALoadPtr AStorageBay * VBayWidth) x VAisleToAisle *(AAisle - 1) - 1 in VShuttleUnloadTime / 2 sec");
                file.WriteLine("		else if (ALoadPtr ASide = VRIGHT) then");
                file.WriteLine("            translate ALoadPtr to y(ALoadPtr AStorageBay * VBayWidth) x VAisleToAisle *(AAisle - 1) + 1 in VShuttleUnloadTime / 2 sec");
                file.WriteLine("		else if (ALoadPtr ASide = VCENTER) then");
                file.WriteLine("            translate ALoadPtr to y(ALoadPtr AStorageBay * VBayWidth) x VAisleToAisle *(AAisle - 1) in VShuttleUnloadTime / 2 sec");
                file.WriteLine("        order ALoadPtr from OLUnloading to continue");
                file.WriteLine("        wait for VShuttleUnloadTime / 2 sec /* This is the time to retract and select the next load */");
                file.WriteLine("        dec CUnloading by 1");
                file.WriteLine("    end");
                file.WriteLine("end");
                file.WriteLine("");
                file.WriteLine("begin FGetLoadNeedingShuttle function");
                file.WriteLine("    for each VLoadPtr in OLNeedsShuttle load list do begin");
                file.WriteLine("        if VLoadPtr AShelf = ArgShelf and VLoadPtr AAisle = ArgAisle then");
                file.WriteLine("            return VLoadPtr");
                file.WriteLine("    end");
                file.WriteLine("    return null");
                file.WriteLine("end");
                file.WriteLine("#@!");
                file.WriteLine("SFileBegin  name ShuttleStorage.m");
                file.WriteLine("/* This is the conveyor that accumulates from the lift to the shuttle */");
                file.WriteLine("/* This would be easier to model as conveyor, but that would require knowing the shelving configuration */");
                file.WriteLine("/* so that the conveyor can be in the correct place and at the correct size */");
                file.WriteLine("begin PShuttleStage arriving");
                file.WriteLine("");
                file.WriteLine("    set ACurrentBay = 0");
                file.WriteLine("    set AShelf = 1 + VNumShelves * u 0.5, 0.5");
                file.WriteLine("    set AAisle = 1 + VNumAisles * u 0.5, 0.5");
                file.WriteLine("    /* Always load onto the shuttle on the left side */");
                file.WriteLine("    if VShuttleLoad = VLEFT then");
                file.WriteLine("        translate to x VAisleToAisle * (AAisle - 1) - 1, y 0, z VLowestShelfHeight +(AShelf - 1) * VShelfHeight");
                file.WriteLine("	else");
                file.WriteLine("        translate to x VAisleToAisle *(AAisle - 1) + 1, y 0, z VLowestShelfHeight +(AShelf - 1) * VShelfHeight");
                file.WriteLine("    move into QShuttleHome");
                file.WriteLine("    send to PMoveIntoStorage");
                file.WriteLine("end");
                file.WriteLine("");
                file.WriteLine("/* Get onto the Shuttle and move into a storage location defined by AShelf, AAisle, ABay, ASide(1=left, 2=right) */");
                file.WriteLine("begin PMoveIntoStorage arriving");
                file.WriteLine("    /* Initialize to some random locations to go to */");
                file.WriteLine("    set AStorageBay = 1 + VNumBays * u 0.5, 0.5");
                file.WriteLine("    set ASide = oneof(1:VLEFT,1:VRIGHT)");
                file.WriteLine("    /* Position the load onto the loading position */");
                file.WriteLine("    /* TODO: Limit the number that can accumulate here or add a short conveyor system */");
                file.WriteLine("    set VShelfTemp = AShelf");
                file.WriteLine("");
                file.WriteLine("    set VAisleTemp = AAisle");
                file.WriteLine("    order 1 load satisfying AShelf = VShelfTemp and AAisle = VAisleTemp from OLIdleShuttle to continue");
                file.WriteLine("    wait to be ordered on OLNeedsShuttle /* Needs to be ordered off based on correct AAisle and AShelf */");
                file.WriteLine("    /* it will be moved into OLWaitForShuttle by the shuttle when selected */");
                file.WriteLine("                /* the shuttle will translate the load onto the shuttle */");
                file.WriteLine("    move into QInvis");
                file.WriteLine("    wait to be ordered on OLOnShuttle");
                file.WriteLine("    /* translate to the correct position to be on the shuttle to be unloaded */");
                file.WriteLine("    /* translate onto the shelf */");
                file.WriteLine("    translate to y VBayWidth* AStorageBay");
                file.WriteLine("    move into QShuttleHome");
                file.WriteLine("    wait to be ordered on OLUnloading");
                file.WriteLine("    set VShelfTemp = AShelf");
                file.WriteLine("    set VAisleTemp = AAisle");
                file.WriteLine("    order 1 satisfying AAisle = VAisleTemp and AShelf = VShelfTemp from OLShuttleUnloading to continue");
                file.WriteLine("    set ACurrentBay = AStorageBay");
                file.WriteLine("    wait for u 60, 20 sec");
                file.WriteLine("    send to PMoveOutOfStorage");
                file.WriteLine("end");
                file.WriteLine("");
                file.WriteLine("begin PMoveOutOfStorage arriving");
                file.WriteLine("    set AStorageBay = 0");
                file.WriteLine("");
                file.WriteLine("    set VShelfTemp = AShelf");
                file.WriteLine("    set VAisleTemp = AAisle");
                file.WriteLine("    /* The shuttle unloads at the lift on the opposote side of where the shuttle loads at the lift */");
                file.WriteLine("    if (VShuttleLoad = VLEFT) then");
                file.WriteLine("        set ASide = VRIGHT");
                file.WriteLine("	else");
                file.WriteLine("        set ASide = VLEFT");
                file.WriteLine("    order 1 load satisfying AShelf = VShelfTemp and AAisle = VAisleTemp from OLIdleShuttle to continue");
                file.WriteLine("    wait to be ordered on OLNeedsShuttle /* Needs to be ordered off based on correct AAisle and AShelf */");
                file.WriteLine("    /* the shuttle will translate the load onto the shuttle */");
                file.WriteLine("    move into QInvis");
                file.WriteLine("    wait to be ordered on OLOnShuttle");
                file.WriteLine("    /* translate to the correct position to be on the shuttle to be unloaded */");
                file.WriteLine("    /* translate onto the shelf */");
                file.WriteLine("    translate to y VBayWidth* AStorageBay");
                file.WriteLine("    move into QShuttleHome");
                file.WriteLine("    wait to be ordered on OLUnloading");
                file.WriteLine("    move into QInvis");
                file.WriteLine("    wait for u 60, 20 sec");
                file.WriteLine("    send to PShuttleStage");
                file.WriteLine("end");
                file.WriteLine("#@!");
                file.WriteLine("SFileBegin  name utils.m");
                file.WriteLine("begin model finished function");
                file.WriteLine("    print \"Summary report\" to \"summary.rep\"");
                file.WriteLine("    print \"Shuttle move % of time:\t\" CMoving average / (VNumShuttles * 1.0) to \"summary.rep\"");
                file.WriteLine("    print \"Shuttle idle % of time:\t\" CIdle average / (VNumShuttles * 1.0) to \"summary.rep\"");
                file.WriteLine("    print \"Shuttle loading % of time:\t\" CLoading average / (VNumShuttles * 1.0) to \"summary.rep\"");
                file.WriteLine("    print \"Shuttle unloading % of time:\t\" CUnloading average / (VNumShuttles * 1.0) to \"summary.rep\"");
                file.WriteLine("    return true");
                file.WriteLine("end");
                file.WriteLine("#@!");
            }
        }
    }
}
